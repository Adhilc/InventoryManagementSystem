package com.cts.model;

import java.time.LocalDate;
import java.time.LocalDateTime;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * Represents an Order entity that maps to the 'orders' table in the database.
 * This class is managed by JPA for persistence.
 *
 * @Entity marks this class as a JPA entity.
 * @Data is a Lombok annotation to boilerplate code for getters, setters, toString(), etc.
 * @NoArgsConstructor is a Lombok annotation to create a no-argument constructor, which is required by JPA.
 * @AllArgsConstructor is a Lombok annotation to create a constructor with all fields.
 * @Table specifies the name of the database table.
 */
@Entity
@Data
@NoArgsConstructor
@AllArgsConstructor
@Table(name="orders")
public class Order {

	/**
	 * The unique identifier for the order.
	 * @Id marks this field as the primary key.
	 * @GeneratedValue specifies how the primary key is generated.
	 * GenerationType.IDENTITY indicates that the ID is generated by the database's
	 * auto-increment column feature.
	 */
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int orderId;

	/**
	 * The ID of the customer who placed the order.
	 * This typically corresponds to the primary key of a Customer entity.
	 */
	private int customerId;

	/**
	 * The ID of the product being ordered.
	 * This typically corresponds to the primary key of a Product entity.
	 */
	private int productId;

	/**
	 * The number of units of the product being ordered.
	 */
	private int quantity;

	/**
	 * The date the order was placed.
	 * Stored as a LocalDate to capture the date without time-of-day information.
	 */
	private LocalDate orderDate; 

	/**
	 * The current status of the order.
	 * For example: "PENDING", "SHIPPED", "DELIVERED", "CANCELLED".
	 */
	private String status;
}